{"version":3,"sources":["Modal/Modal.tsx","App.tsx","reportWebVitals.ts","Store/index.ts","Store/appStore.ts","index.tsx"],"names":["Modal","modalActive","onClickModalHandler","name","surname","className","onClick","e","stopPropagation","App","inject","observer","appStore","storeName","storeSurname","surName","useState","setModalActive","setName","setSurname","nameDirty","setNameDirty","surnameDirty","setSurnameDirty","errorName","setErrorName","errorSurName","setErrorSurName","onBlurHandler","event","target","onBlur","type","value","onChange","placeholder","trim","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","stores","observable","action","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4fa043cd.chunk.js","sourcesContent":["import React, { SyntheticEvent } from \"react\";\r\nimport { ModalType } from \"../Types/types\";\r\nimport './modall.scss'\r\n\r\n\r\n\r\nconst Modal = ({modalActive, onClickModalHandler, name, surname}: ModalType) => {\r\n    const btnHandler = (e: SyntheticEvent) => {\r\n        e.stopPropagation()\r\n        onClickModalHandler()\r\n    }\r\n    const openNodal = () => onClickModalHandler()\r\n    return (\r\n        <div className={modalActive ? 'modal active' : 'modal'} onClick={openNodal}>\r\n            <div className=\"modal_content\">\r\n                <button onClick={btnHandler} className=\"button\">x</button>\r\n                <p className=\"text\">{`Здравствуйте, ${name} ${surname}`}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, {ChangeEvent, useState} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport Modal from \"./Modal/Modal\";\nimport './app.scss'\nimport {AppType} from \"./Types/types\";\n\n\nconst App = inject('appStore')(\n    observer(({appStore}: AppType) => {\n\n        const storeName = appStore?.name\n        const storeSurname = appStore?.surName\n\n        const [modalActive, setModalActive] = useState<boolean>(false)\n\n        const [name, setName] = useState<string>('')\n        const [surname, setSurname] = useState<string>('')\n\n        const [nameDirty, setNameDirty] = useState<boolean>(false)\n        const [surnameDirty, setSurnameDirty] = useState<boolean>(false)\n        const [errorName, setErrorName] = useState<string>('Name is required')\n        const [errorSurName, setErrorSurName] = useState<string>('Surname is required')\n\n        const onBlurHandler = (event: React.FocusEvent<HTMLInputElement>) => {\n            switch (event.target.name){\n                case \"name\":\n                    setNameDirty(true)\n                    break\n                case \"surname\":\n                    setSurnameDirty(true)\n                    break\n\n            }\n        }\n        const nameHandler = (e: ChangeEvent<HTMLInputElement>) => {\n            setErrorName('')\n            setName(e.target.value)\n        }\n        const surNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\n            setErrorSurName('')\n            setSurname(e.target.value)\n        }\n        const onClickHandler = () => {\n            if (name.trim() !== '' && surname.trim() !== '')\n            {\n                appStore?.setName(name)\n                appStore?.setSurname(surname)\n                setName('')\n                setSurname('')\n                setModalActive(true)\n                setNameDirty(false)\n            } else {\n                setNameDirty(true)\n                setSurnameDirty(true)\n            }\n        }\n        const onClickModalHandler = () => {\n            setModalActive(!modalActive)\n            setNameDirty(true)\n            setSurnameDirty(true)\n            setErrorName('Name is required')\n            setErrorSurName('Surname is required')\n        }\n        return (\n            <>\n                <div className=\"app\">\n                        <div className=\"form\">\n                            <div className=\"form-input\">\n                                <input onBlur={onBlurHandler} type=\"text\" name={\"name\"} value={name} onChange={nameHandler} placeholder={'Name'}/>\n                                {(nameDirty && errorName) && <div className=\"error-message\">{errorName}</div>}\n                            </div>\n                            <div className=\"form-input\">\n                                <input onBlur={onBlurHandler} type=\"text\" name={\"surname\"} value={surname} onChange={surNameHandler} placeholder={'Surname'}/>\n                                {(surnameDirty && errorSurName) && <div className=\"error-message\">{errorSurName}</div>}\n                            </div>\n                            <button className=\"form_btn\" onClick={onClickHandler}>Готово</button>\n                        </div>\n                </div>\n                <Modal modalActive={modalActive} onClickModalHandler={onClickModalHandler} name={storeName} surname={storeSurname}/>\n            </>\n        );\n    }),\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import AppStore from \"./appStore\";\r\nconst stores = {\r\n    appStore: new AppStore(),\r\n}\r\n\r\nexport default stores","import {observable, action} from \"mobx\";\r\n\r\nclass AppStore {\r\n    @observable name: string = ''\r\n    @observable surName: string = ''\r\n\r\n    @action\r\n    setName = (name: string): void => {\r\n        this.name = name\r\n    }\r\n    @action\r\n    setSurname = (surname: string): void => {\r\n        this.surName = surname\r\n    }\r\n}\r\n\r\nexport default AppStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'mobx-react'\nimport store from './Store/index'\nReactDOM.render(\n  <React.StrictMode>\n      <Provider {...store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}